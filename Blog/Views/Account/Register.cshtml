@model RegisterViewModel

@{
    ViewData["Title"] = "Зарегистрироваться";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Register" method="post">
        <div class="form-group">
            <label asp-for="UserName" class="control-label"></label>
            <input asp-for="UserName" class="form-control" placeholder="Введите ваше имя" />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" placeholder="Введите вашу электронную почту" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" type="password" class="form-control" placeholder="Введите ваш пароль" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ConfirmPassword" class="control-label"></label>
            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Подтвердите ваш пароль" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
    </form>
    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
    {
        <div class="alert alert-danger">@error.ErrorMessage</div>
    }

    <p class="mt-3">Уже есть аккаунт? <a href="@Url.Action("Login", "Account")">Войти</a></p>
</div>
